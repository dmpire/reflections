When would you want to use a remote repository rather 
than keeping all your work local?

MY REFLECTIONS:
When working with other people so like the other person
pushes certain changes to the repository and when 
working from a different computer.

--------------------------------------------------------

Why might you want to always pull changes manually 
rather than having Git automatically stay up-to-date
 with your remote repository?

 MY REFLECTIONS:

 So that git doesn't have to be over-worked unnecessarily?
 i'm not entirely sure because automation always seems like
 such a good idea.

-----------------------------------------------------------
 Describe the differences between forks, clones,
 and branches. When would you use one instead of another?

 MY REFLECTIONS:

Fork basically clones or copies someone else's repository
on GitHub to your own GitHub account and maintains a link
so people know who was the original owner of the project 
which is a way of giving credit to the person. Fork also makes it 
possible/ easier for you to later contribute to a repository.

Clone means to copy a repository from GitHub to your Local Computer.

Branches is basically like creating different compartments 
or components or features of the same project.

I feel the above explanations also answer the second question.

---------------------------------------------------------------
What is the benefit of having a copy of the last known state of
the remote stored locally?

MY REFLECTIONS:

To avoid conflicts in the repository when it is pushed. 
To make sure that the repository is up-to-date on all ends,
i.e. locally and remotely as well. When collaborating this means 
that you and all other collaborators on the project are mostly
always on the same page.

---------------------------------------------------------------
How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?

MY REFLECTIONS:

I would have to collaborate in person, which means that we have
to be in the same location. Or we could try email which will be a 
very tedious process. Like sending your codes back and forth via
email and then copying and pasting the codes sent into your 
respective text editors.

---------------------------------------------------------------
When would you want to make changes in a separate branch rather
than directly in master? What benefits does each approach have?

MY REFLECTIONS:

When you are working alone on a project, it's okay to work directly 
in the master branch but when collaborating with others, it's 
usually better to work in a different branch so that conflicts can
be resolved more easily.